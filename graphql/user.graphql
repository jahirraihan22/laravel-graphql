extend type Query {
    users: [User!]! @all
    users_paginate: [User!]! @paginate #paginate
    user(id: ID @eq): User @find # user(id:1) getting a user by query
    # creating query
}

extend type Mutation {
    createUser(
        name: String!
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @rules(apply: ["min:8"])
    ): User! @create
    updateUser(id: ID!, name: String, email: String): User! @update

    #--------------------------------------------------------------------
    # @create, @update etc are called the "resolver"
    #
    # here is the catch if there ! then it is required no matter what is going on you need to put this variable,
    # otherwise this will be nullable, here name & email are nullable but not id
    #--------------------------------------------------------------------

    deleteUser(id: ID!): User! @delete

    #  new concept ********************
    # @upsert => if that id is not exist then it will insert
    upsertUser(
        id: ID!
        name: String!
        email: String!
        password: String!
    ): User! @upsert
}

# this is model
type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime
    updated_at: DateTime
    posts: [Post]! @hasMany
}
